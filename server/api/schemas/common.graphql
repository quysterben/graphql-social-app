const {gql} = require('graphql-tag')

module.exports = gql `
    extend type Query {
        getAllUsers: [User!]
        getOneUser(input: GetOneUserInput!): User!
    }

    extend type Mutation {
        register(input: RegisterInput!): RegisterResponse
        login(input: LoginInput!): LoginResponse
        logout: MessageResponse
        forgotPassword(email: String!): MessageResponse
        resetPassword(input: ResetPasswordInput!): MessageResponse

        deleteUser(input: DeleteUserInput!): MessageResponse
        updateUser(input: UpdateUserInput!): UpdateUserResponse
    }

    type User {
        id: Int!
        name: String!
        email: String!
        dateOfBirth: Date
        from: String
        avatar: String
        wallpaper: String
        isOnline: Boolean
        banned: Boolean
        role: String
        createdAt: DateTime!
    }

    type RegisterResponse {
        id: Int!
        name: String!
        email: String!
    }

    type LoginResponse {
        token: String!
        id: Int!
        name: String!
        email: String!
        dateOfBirth: String
        role: String!
        from: String
        avatar: String
        wallpaper: String
    }

    type MessageResponse {
        message: String!
    }

    type UpdateUserResponse {
        id: Int!
        name: String!
        email: String!
        dateOfBirth: String
        from: String
        avatar: String
        role: String
        wallpaper: String
    }

    input UpdateUserInput {
        userId: Int!
        name: String!
        dateOfBirth: Date
        from: String
    }

    input DeleteUserInput {
        userId: Int!
    }

    input GetOneUserInput {
        userId: Int!
    }
    
    input RegisterInput {
        name: String!
        email: String!
        password: String!
    }

    input LoginInput {
        email: String!
        password: String!
    }

    input ResetPasswordInput {
        token: String!
        password: String!
    }
`